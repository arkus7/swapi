type Character {
  id: ID!
  name: String!
  pictureUrl: String
  height: Int
  mass: Int
  hairColor: [String!]!
  skinColor: [String!]!
  eyeColor: [String!]!
  birthYear: String
  gender: String
  homeWorld: Location
  # species: Species
  appearances: [Film!]!
  # vehicles: [Vehicle!]!
}

type Query {
  characters(params: CharacterFindInput): PaginatedCharacters!
  character(id: ID!): Character
  charactersFromFilm(filmId: ID!): [Character!]!
}

input CharacterFindInput {
  paginate: PaginateOptionsInput
  filter: CharacterWhereInput
}

input CharacterWhereInput {
  name: String
  film: ID
  homeWorld: ID
}

type PaginatedCharacters {
  results: [Character]!
  previous: String
  hasPrevious: Boolean!
  next: String
  hasNext: Boolean!
}
